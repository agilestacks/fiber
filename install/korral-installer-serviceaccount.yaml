---
# a ServiceAccount with sufficient permissions for Fiber to install Korral
# kubectl apply -f install/korral-installer-serviceaccount.yaml
# kubectl -n monitoring get serviceaccount korral-installer -o json | \
#   jq -r '.secrets[] | select(.name | contains("token")).name' | \
#   xargs kubectl -n monitoring get secret -o json | \
#   jq -r '.data.token' | base64 -d | xargs echo
# use the token in `kubernetes.api.token` Korral custom resource
kind: ServiceAccount
apiVersion: v1
metadata:
  name: korral-installer
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: korral-installer
rules:
# installer permissions
- apiGroups:
  - ""
  resources:
  - namespaces
  - serviceaccounts
  - secrets
  - services
  verbs:
  - get
  - create
  - patch
  - delete
- apiGroups:
  - "apps"
  resources:
  - deployments
  verbs:
  - get
  - create
  - patch
  - delete
- apiGroups:
  - "rbac.authorization.k8s.io"
  resources:
  - clusterroles
  - clusterrolebindings
  verbs:
  - get
  - create
  - patch
  - delete
# Korral permissions
- apiGroups:
  - ""
  resources:
  - nodes
  - persistentvolumeclaims
  - persistentvolumes
  - pods
  - replicationcontrollers
  - services
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - services/proxy
  resourceNames:
  - korral:9897
  verbs:
  - get
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - list
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: korral-installer
  namespace: monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: korral-installer
subjects:
- kind: ServiceAccount
  name: korral-installer
  namespace: monitoring
